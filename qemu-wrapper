#!/bin/bash

export ETHERNET=""
export BRIDGE_BRIDGE=wbr1
export NAT_BRIDGE=wbr0
export NAT_DNS_PORT=5353
export NAT_NETWORK=192.168.53.0
export NAT_NETMASK=255.255.255.0
export NAT_GATEWAY=192.168.53.1
export NAT_DHCPRANGE=192.168.53.2,192.168.53.254

progname="$(basename $0)"
usage() {
  echo "Usage: "$progname" <disk image path> [options]"
  echo
  echo "Options:"
  echo "  -h or -help                       Display this help and exit"
  echo "  -br  <interface_with_internet>    Set the network mode to bridge (default is nat)"
  echo "  -mac <mac_address>                Set mac address"
  echo "  -dir <share_directory>            Set share directory"
  echo "  -vnc                              Enable vnc and assign ports in order"
  echo
  echo "Examples:"
  echo "  "$progname" /path/to/fedora.qcow2 -br eth0 -mac 52:54:91:2c:1e:8d -dir /path/to/share_directory -vnc"
  echo "  "$progname" /path/to/fedora.qcow2 -kernel /path/to/bzImage -append \"root=/dev/vda1 console=ttyS0\" -nographic -vnc :0"
}

if [[ -z $1 ]] || [[ $1 = "-h" ]] || [[ $1 = "-help" ]]; then
  usage
  exit 0
fi

is_bridge_interface() {
    [[ -z "$1" ]] && return 1
    [[ -d "/sys/class/net/${1}/bridge" ]]
}
export -f is_bridge_interface

disk=""
smp=" -smp 1 "
mem=" -m 2g "
net=nat
vnc=""
mac_addr=""
share_directory=""

mkdir -p /var/run/qemu-wrapper/
mac_history=/var/run/qemu-wrapper/mac_address_history
[[ -f $mac_history ]] && mac_addr=$(grep "^$1 " $mac_history | awk '{print $2}')
if [[ -z $mac_addr ]]; then
  printf -v mac_addr '52:54:%02x:%02x:%02x:%02x' $(( $RANDOM & 0xff)) $(( $RANDOM & 0xff )) $(( $RANDOM & 0xff)) $(( $RANDOM & 0xff ))
  echo $1 $mac_addr >> $mac_history
fi

args=("$@")
for ((i=$(("${#args[@]}" - 1)); i > -1 ; --i)); do
  case ${args[i]} in
  -smp)
    smp=""
    ;;
  -m)
    mem=""
    ;;
  -disk)
    disk=" -drive file=${args[i+1]},if=virtio "
    unset args[i]
    unset args[i+1]
    ;;
  -mac)
    mac_addr=${args[i+1]}
    unset args[i]
    unset args[i+1]
    ;;
  -dir)
    virtiofsd --socket-path=/var/run/vm001-vhost-fs.sock -o source="${args[i+1]}" -o cache=always &
    share_directory=" -chardev socket,id=char0,path=/var/run/vm001-vhost-fs.sock -device vhost-user-fs-pci,queue-size=1024,chardev=char0,tag=myfs -m 4G -object memory-backend-file,id=mem,size=4G,mem-path=/dev/shm,share=on -numa node,memdev=mem "
    unset args[i]
    unset args[i+1]
    ;;
  -br)
    ETHERNET=${args[i+1]}
    net=bridge
    unset args[i]
    unset args[i+1]
    ;;
  -vnc)
    if [[ ${args[i+1]} != :* ]]; then
      vnc=" -vnc :"$(($(comm -3 <(seq 5900 6000) <(ss -nltp | grep "\"qemu-system-x86\"" | awk '{print $4}' | grep -Eo "[0-9]+$" | sort -V | uniq) | head -n 1) - 5900))
      unset args[i]
    fi
    ;;
  esac
done

echo mac address : $mac_addr

qemu-system-x86_64 -enable-kvm $smp $mem -cpu host \
  -netdev tap,id=tap0,script=/etc/qemu-wrapper-ifup-$net,downscript=/etc/qemu-wrapper-ifdown-$net \
  -chardev pty,id=c0 \
  -device virtio-net,netdev=tap0,mac=$mac_addr \
  -device isa-serial,chardev=c0 \
  -device virtio-rng-pci \
  $disk $share_directory $vnc "${args[@]}"

