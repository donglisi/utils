#!/bin/bash

machine="-machine q35,accel=kvm"
cpu="-cpu host"
smp="-smp 4,sockets=1,cores=4"
mem="-m 4g"
net_model=virtio-net-pci
printf -v mac_addr '52:54:%02x:%02x:%02x:%02x' $(($RANDOM & 0xff)) $(($RANDOM & 0xff)) $(($RANDOM & 0xff)) $(($RANDOM & 0xff))
args=()

while test $# -gt 0; do
  case $1 in
  -name)
    mkdir -p ~/.config
    mac_addr_list=~/.config/qemu-wrapper_mac_addrs
    touch $mac_addr_list
    mac_addr_orig=$(grep "^$2=" $mac_addr_list | cut -d "=" -f 2)
    if [ -z "$mac_addr_orig" ]; then
      echo "$2"="$mac_addr" >> $mac_addr_list
    else
      mac_addr=$mac_addr_orig
    fi
    args+=("$1")
    ;;
  -machine)
    machine=""
    args+=("$1")
    ;;
  -cpu)
    cpu=""
    args+=("$1")
    ;;
  -smp)
    smp=""
    args+=("$1")
    ;;
  -m)
    mem=""
    args+=("$1")
    ;;
  -br)
    br="$2"
    shift
    ;;
  -enet)
    net_model=e1000e
    ;;
  -rvd)
    args+=("-drive")
    args+=("file=$(readlink -f "$2"),format=raw,if=virtio")
    shift
    ;;
  -rsd)
    args+=("-drive")
    args+=("file=$(readlink -f "$2"),format=raw")
    shift
    ;;
  -qvd)
    args+=("-drive")
    args+=("file=$(readlink -f "$2"),format=qcow2,if=virtio")
    shift
    ;;
  -spi)
    args+=("-spice")
    args+=("port=$2,addr=0.0.0.0,disable-ticketing=on")
    args+=("-device")
    args+=("virtio-serial-pci,id=virtio-serial0")
    args+=("-chardev")
    args+=("spicevmc,id=charchannel0,name=vdagent")
    args+=("-device")
    args+=("virtserialport,bus=virtio-serial0.0,chardev=charchannel0,id=channel0,name=com.redhat.spice.0")
    args+=("-device")
    args+=("qemu-xhci,id=usb")
    args+=("-chardev")
    args+=("spicevmc,id=charredir0,name=usbredir")
    args+=("-device")
    args+=("usb-redir,chardev=charredir0,id=redir0,bus=usb.0,port=1")
    args+=("-chardev")
    args+=("spicevmc,id=charredir1,name=usbredir")
    args+=("-device")
    args+=("usb-redir,chardev=charredir1,id=redir1,bus=usb.0,port=2")
    shift
    ;;
  *)
    args+=("$1")
    ;;
  esac
  shift
done

if [ -n "$br" ]; then
  args+=("-nic")
  args+=("bridge,br=$br,model=$net_model,mac=$mac_addr")
fi

free_port=$(comm -23 <(seq 49152 65535 | sort) <(ss -Htan | awk '{print $4}' | cut -d':' -f2 | sort -u) | shuf | head -n 1)

exec qemu-system-x86_64 \
$machine \
$cpu \
$smp \
$mem \
-rtc base=localtime \
-object rng-random,id=objrng0,filename=/dev/urandom \
-device virtio-rng-pci,rng=objrng0,id=rng0 \
-monitor telnet:0.0.0.0:$free_port,server,nowait "${args[@]}"
