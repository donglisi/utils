#!/bin/bash

export ETHERNET=""
export BRIDGE_BRIDGE=wbr1
export NAT_BRIDGE=wbr0
export NAT_NETWORK=192.168.53.0
export NAT_NETMASK=255.255.255.0
export NAT_GATEWAY=192.168.53.1
export NAT_DHCPRANGE=192.168.53.2,192.168.53.254

progname="$(basename $0)"
usage() {
  echo "Usage: "$progname" <disk image path> [options]"
  echo
  echo "Options:"
  echo "  -h or -help                       display this help and exit"
  echo "  -br <interface_with_internet>     Set the network mode to bridge (default is nat)"
  echo "  -mac <mac_address>                Set mac address"
  echo "  -vnc [:qemu_vnc_port]             Enable vnc and assign ports in order"
  echo
  echo "Examples:"
  echo "  "$progname" /path/to/fedora.qcow2 -vnc"
  echo "  "$progname" /path/to/fedora.qcow2 -mac 52:54:91:2c:1e:8d"
  echo "  "$progname" /path/to/fedora.qcow2 -br eth0"
  echo "  "$progname" /path/to/fedora.qcow2 -vnc :0 -kernel /path/to/bzImage -append \"root=/dev/vda1 console=ttyS0\""
}

if [[ -z $1 ]] || [[ $1 = "-h" ]] || [[ $1 = "-help" ]]; then
  usage
  exit 0
fi
[[ ! -f $1 ]] && echo \<$1\> not is a file && exit 1

is_bridge_interface() {
    [[ -z "$1" ]] && return 1
    [[ -d "/sys/class/net/${1}/bridge" ]]
}
export -f is_bridge_interface

disk=" -drive file=$1,if=virtio "
smp=" -smp 2 "
mem=" -m 2g "
net=nat
vnc=""
mac_addr=""
host_share_directory=""
tap_number=$(comm -3 <(seq -f "%02g" 0 99) <(ip a | grep -Eo "^[0-9]+: tap[0-9]+" | awk '{gsub("tap","", $2); printf "%02d\n", $2}' | sort -V) | head -n 1 | sed -E 's/^0{1}//')

mkdir -p /var/run/qemu-wrapper/
mac_history=/var/run/qemu-wrapper/mac_address_history
[[ -f $mac_history ]] && mac_addr=$(grep "^$1 " $mac_history | awk '{print $2}')
if [[ -z $mac_addr ]]; then
  printf -v mac_addr '52:54:%02x:%02x:%02x:%02x' $(( $RANDOM & 0xff)) $(( $RANDOM & 0xff )) $(( $RANDOM & 0xff)) $(( $RANDOM & 0xff ))
  echo $1 $mac_addr >> $mac_history
fi

args=("$@")
for ((i=$(("${#args[@]}" - 1)); i > 0; --i)); do
  case ${args[i]} in
  -smp)
    smp=""
    ;;
  -m)
    mem=""
    ;;
  -mac)
    mac_addr=${args[i+1]}
    unset args[i]
    unset args[i+1]
    ;;
  -hsd)
    host_share_directory="-fsdev local,id=share,path=${args[i+1]},security_model=none -device virtio-9p-pci,fsdev=share,mount_tag=hsd"
    unset args[i]
    unset args[i+1]
    ;;
  -br)
    ETHERNET=${args[i+1]}
    net=bridge
    unset args[i]
    unset args[i+1]
    ;;
  -vnc)
    if [[ ${args[i+1]} != :* ]]; then
      vnc=" -vnc :"$(($(comm -3 <(seq 5900 6000) <(ss -nltp | grep "\"qemu-system-x86\"" | awk '{print $4}' | grep -Eo "[0-9]+$" | sort -V | uniq) | head -n 1) - 5900))
      unset args[i]
    fi
    ;;
  esac
done
unset args[0]
echo mac address : $mac_addr

qemu-system-x86_64 -enable-kvm -cpu host \
  -chardev pty,id=c0 -device isa-serial,chardev=c0 \
  -netdev tap,id=tap0,ifname=tap$tap_number,script=/etc/qemu-ifup-$net,downscript=/etc/qemu-ifdown-$net \
  -device virtio-net,netdev=tap0,mac=$mac_addr \
  -device virtio-rng-pci \
   $disk $smp $mem $host_share_directory $vnc "${args[@]}"
