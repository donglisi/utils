#!/bin/python3

import re 
import subprocess
import argparse
from tabulate import tabulate

parser = argparse.ArgumentParser(description='Optional app description')
parser.add_argument('-n', action='store_true', help='A boolean switch')
parser.add_argument('-b', action='store_true', help='A boolean switch')
args = parser.parse_args()

vms = []
for line in subprocess.getoutput("pgrep qemu-system-x86 -a").splitlines():
    vm = []
    
    port=line.split()[0]

    names = re.findall('-name [\w-]+', line)
    if names:
        name = names[0].split()[1]
    else:
        name = "NULL"

    mons = re.findall('-monitor telnet:0.0.0.0:\d+', line)
    if mons:
        mon = mons[0].split(":")[2]
    else:
        mon = -1

    nets = []
    blks = []
    tcps = re.findall('-monitor tcp:0.0.0.0:\d+', line)
    if tcps:
        tcp = tcps[0].split(":")[2]

        if args.n:
            i = 0
            for netstr in subprocess.getoutput("echo info network |nc -N 127.0.0.1 " + tcp + " | grep -v ^\(qemu\) | grep -v \"^QEMU \"").splitlines():
                if (i % 2) == 0:
                    net = []
                    net.append(netstr.split(":")[0])
                    net.append(netstr.split("=")[-1])
                    nets.append(net)
                else:
                    nets[-1].append(re.findall("ifname=tap\d+", netstr)[0].split("=")[1])
                i = i + 1

        if args.b:
            for blk in subprocess.getoutput("echo info block |nc -N 127.0.0.1 " + tcp + " | grep -v ^\(qemu\) | grep -v \"^QEMU \" | sed '1i\\\\' | sed 's/\r//g' | sed -n '/^$/{n;p;}' | grep -o '/[^ \"]*'").splitlines():
                blks.append(blk)

    else:
        tcp = -1

    vncs = re.findall('-vnc :\d+', line)
    if vncs:
        vnc = vncs[0].split(":")[1]
    else:
        vnc = -1

    spis = re.findall('-spice port=\d+', line)
    if spis:
        spi = spis[0].split("=")[1]
    else:
        spi = -1

    vm.append(port)
    vm.append(name)
    vm.append(vnc)
    vm.append(spi)
    vm.append(mon)
    vm.append(tcp)
    if args.n:
        vm.append(nets)
    if args.b:
        vm.append(blks)

    vms.append(vm)

head = []
head.append("pid")
head.append("name")
head.append("vnc")
head.append("spi")
head.append("mon")
head.append("tcp")
if args.n:
    head.append("nets")
if args.b:
    head.append("blks")

print(tabulate(vms, head))
